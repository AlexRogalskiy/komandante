def SONATYPE_USERNAME = System.getenv('SONATYPE_USERNAME')
def SONATYPE_PASSWORD = System.getenv('SONATYPE_PASSWORD')

def signinKeyID = System.getenv('SIGNING_KEYID')
def signinPassword = System.getenv('SIGNING_PASSWORD')
def signingSecretKeyRingFile = {
    def f = File.createTempFile(UUID.randomUUID().toString(), null);
    FileOutputStream fos = new FileOutputStream(f)
    fos.write(Base64.decoder.decode(System.getenv('SIGNING_SECRETKEYRINGFILE')))
    return f.absolutePath
}

task sonaTypeUpload(type: Upload) {
    if (SONATYPE_USERNAME == null || BUILD_NUMBER == null) {
        return
    }
    configuration = configurations.archives
    uploadDescriptor = true
    repositories {
        allprojects {
            ext."signing.keyId" = signinKeyID
            ext."signing.secretKeyRingFile" = signingSecretKeyRingFile()
            ext."signing.password" = signinPassword
        }

        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                authentication(userName: SONATYPE_USERNAME, password: SONATYPE_PASSWORD)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: SONATYPE_USERNAME, password: SONATYPE_PASSWORD)
            }
            pom.project {
                name name
                description description
                packaging 'jar'
                inceptionYear '2019'
                url "https://github.com/hasanozgan/komandante"
                organization {
                    name 'netology'
                    url 'http://netology.org'
                }
                developers {
                    developer {
                        id 'hasanozgan'
                        name 'Hasan Ozgan'
                        email 'hasan@ozgan.net'
                        url 'https://hasanozgan.com'
                    }
                }
                scm {
                    connection 'scm:git:https://github.com/hasanozgan/komandante.git'
                    developerConnection 'scm:git:https://github.com/hasanozgan/komandante.git'
                    url 'https://github.com/hasanozgan/komandante'
                }
                licenses {
                    license {
                        name 'The MIT License'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
            }
        }
    }
}