build-default: &build-default
  docker:
    - image: circleci/openjdk:8-jdk-browsers # Primary container -> all steps run on this
  environment:
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    GRADLE_OPTS: "-Xms1024m -Xmx2048m -Dorg.gradle.daemon=false"
    JVM_OPTS: "-Xms1024m -Xmx2048m"
    _JAVA_OPTIONS: "-Xms1024m -Xmx2048m"
  working_directory: ~/komandante

version: 2
jobs:
  build-test:
    <<: *build-default
    steps:
      - checkout
      - restore_cache:
          keys:
            - komandante-{{ checksum "build.gradle" }}
            - komandante-
      - run: ./gradlew clean dependencies
      - save_cache:
          paths:
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.bundle
            - ~/.gradle
            - ~/.cache/bower
            - ~/.sbt
            - ~/.ivy2
          key: komandante-{{ checksum "build.gradle" }}
      - run: ./gradlew shadowJar
      - run:
          name:  Download cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: ./cc-test-reporter before-build
      - run: ./gradlew test testIntegration jacocoTestReport --info --stacktrace
      - run:
          name: Upload code jacoco coverage as specified in build.gradle
          command: |
            JACOCO_SOURCE_PATH=src/main/kotlin ./cc-test-reporter format-coverage build/reports/tests/jacoco/test/jacocoTestReport.xml --input-type jacoco
            ./cc-test-reporter upload-coverage
          key: komandante-{{ checksum "build.gradle" }}
      - run:
          name: deploy maven repo
          command: ./gradlew clean sonaTypeUpload  --info --stacktrace
          key: komandante-{{ checksum "build.gradle" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - komandante/*
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: target/universal
      - store_artifacts:
          path: /tmp/circleci-test-results

workflows:
  version: 2

  release-pipeline:
    jobs:
      - build-test